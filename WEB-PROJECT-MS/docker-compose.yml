version: "3"
services:
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    volumes:
      - redis-data:/data
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    networks:
      - smartspendnetwork
  db:
    build:
      context: ./SRC/db-service
      dockerfile: Dockerfile
    container_name: db-service-container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: smartspenddb
      MYSQL_USER: user
      MYSQL_PASSWORD: root
    command: --lower_case_table_names=1
    volumes:
      - database-data:/var/lib/mysql
    networks:
      - smartspendnetwork

  front-service:
    build:
      context: ./SRC/front-service
      dockerfile: Dockerfile
    container_name: front-service-container
    ports:
      - "9080:8080"
    networks:
      - smartspendnetwork

  login-service:
    build:
      context: ./SRC/login-service
      dockerfile: Dockerfile
    container_name: login-service-container
    ports:
      - "9081:8081"
    depends_on:
      - db
      - redis
    networks:
      - smartspendnetwork

  inscription-service:
    build:
      context: ./SRC/inscription-service
      dockerfile: Dockerfile
    container_name: inscription-service-container
    ports:
      - "9082:8082"
    depends_on:
      - db
      - redis
    networks:
      - smartspendnetwork

  logout-service:
    build:
      context: ./SRC/logout-service
      dockerfile: Dockerfile
    container_name: logout-service-container
    ports:
      - "9085:8085"
    depends_on:
      - redis
    networks:
      - smartspendnetwork

  objectif-financier-service:
    build:
      context: ./SRC/objectifs-financiers-service
      dockerfile: Dockerfile
    container_name: objectifs-financiers-service-container
    ports:
      - "9087:8087"
    depends_on:
      - db
      - redis
    networks:
      - smartspendnetwork

  alertes-service:
    build:
      context: ./SRC/alertes-service
      dockerfile: Dockerfile
    container_name: alertes-service-container
    ports:
      - "9084:8084"
    depends_on:
      - db
      - redis
    networks:
      - smartspendnetwork

  espace-perso-service:
    build:
      context: ./SRC/espace-perso-service
      dockerfile: Dockerfile
    container_name: espace-perso-service-container
    ports:
      - "9083:8083"
    depends_on:
      - db
      - redis
    networks:
      - smartspendnetwork

  transaction-service:
    build:
      context: ./SRC/transactions-service
      dockerfile: Dockerfile
    container_name: transactions-service-container
    ports:
      - "9086:8086"
    depends_on:
      - db
      - redis
    networks:
      - smartspendnetwork

volumes:
  database-data:
  redis-data:
networks:
  smartspendnetwork:
    driver: bridge